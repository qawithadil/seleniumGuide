<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-07-10T14:56:46 IST" name="Suite" finished-at="2023-07-10T14:57:06 IST" duration-ms="19398">
    <groups>
      <group name="POM">
        <method signature="Login_POM.loginTest(java.lang.String,java.lang.String)[pri:0, instance:testNg.Login_POM@4be29ed9]" name="loginTest" class="testNg.Login_POM"/>
        <method signature="Login_POM.testScreenshot()[pri:0, instance:testNg.Login_POM@4be29ed9]" name="testScreenshot" class="testNg.Login_POM"/>
      </group> <!-- POM -->
    </groups>
    <test started-at="2023-07-10T14:56:46 IST" name="Test" finished-at="2023-07-10T14:57:06 IST" duration-ms="19398">
      <class name="testNg.Login_POM">
        <test-method is-config="true" signature="setUp(org.testng.ITestContext)[pri:0, instance:testNg.Login_POM@4be29ed9]" started-at="2023-07-10T14:56:46 IST" name="setUp" finished-at="2023-07-10T14:57:04 IST" duration-ms="17396" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@6010d0d1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="loginTest(java.lang.String,java.lang.String)[pri:0, instance:testNg.Login_POM@4be29ed9]" started-at="2023-07-10T14:57:04 IST" name="loginTest" data-provider="loginPage" finished-at="2023-07-10T14:57:04 IST" duration-ms="226" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[test1@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[test1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method signature="loginTest(java.lang.String,java.lang.String)[pri:0, instance:testNg.Login_POM@4be29ed9]" started-at="2023-07-10T14:57:04 IST" name="loginTest" data-provider="loginPage" finished-at="2023-07-10T14:57:05 IST" duration-ms="181" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[test2@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[test2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method signature="loginTest(java.lang.String,java.lang.String)[pri:0, instance:testNg.Login_POM@4be29ed9]" started-at="2023-07-10T14:57:05 IST" name="loginTest" data-provider="loginPage" finished-at="2023-07-10T14:57:05 IST" duration-ms="224" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[test3@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[test3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method signature="loginTest(java.lang.String,java.lang.String)[pri:0, instance:testNg.Login_POM@4be29ed9]" started-at="2023-07-10T14:57:05 IST" name="loginTest" data-provider="loginPage" finished-at="2023-07-10T14:57:05 IST" duration-ms="156" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[test4@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[test4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method signature="loginTest(java.lang.String,java.lang.String)[pri:0, instance:testNg.Login_POM@4be29ed9]" started-at="2023-07-10T14:57:05 IST" name="loginTest" data-provider="loginPage" finished-at="2023-07-10T14:57:05 IST" duration-ms="175" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[test5@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[test5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method signature="testScreenshot()[pri:0, instance:testNg.Login_POM@4be29ed9]" started-at="2023-07-10T14:57:05 IST" name="testScreenshot" finished-at="2023-07-10T14:57:05 IST" duration-ms="29" status="FAIL">
          <exception class="org.openqa.selenium.InvalidSelectorException">
            <message>
              <![CDATA[invalid selector: Unable to locate an element with the xpath expression 123 because of the following error:
TypeError: Failed to execute 'evaluate' on 'Document': The result is not a node set, and therefore cannot be converted to the desired type.
  (Session info: chrome=114.0.5735.199)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [2547e0c3fe1e757bba19a1e43150be49, findElement {using=xpath, value=123}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.199, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\MOHAMM~1.ADI\AppDa...}, goog:chromeOptions: {debuggerAddress: localhost:60976}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:60976/devtoo..., se:cdpVersion: 114.0.5735.199, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 2547e0c3fe1e757bba19a1e43150be49]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.InvalidSelectorException: invalid selector: Unable to locate an element with the xpath expression 123 because of the following error:
TypeError: Failed to execute 'evaluate' on 'Document': The result is not a node set, and therefore cannot be converted to the desired type.
  (Session info: chrome=114.0.5735.199)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [2547e0c3fe1e757bba19a1e43150be49, findElement {using=xpath, value=123}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.199, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\MOHAMM~1.ADI\AppDa...}, goog:chromeOptions: {debuggerAddress: localhost:60976}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:60976/devtoo..., se:cdpVersion: 114.0.5735.199, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 2547e0c3fe1e757bba19a1e43150be49
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at testNg.Login_POM.testScreenshot(Login_POM.java:74)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.InvalidSelectorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScreenshot -->
        <test-method is-config="true" signature="close()[pri:0, instance:testNg.Login_POM@4be29ed9]" started-at="2023-07-10T14:57:05 IST" name="close" finished-at="2023-07-10T14:57:06 IST" duration-ms="268" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- testNg.Login_POM -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
